                    // Скопируйте массив с помощью оператора Spread
// В то время как slice()позволяет нам выбирать, какие элементы массива копировать, помимо нескольких других полезных задач, 
// новый оператор распространения ES6 позволяет нам легко копировать все элементы массива по порядку с помощью простого и
// легко читаемого синтаксиса. Синтаксис распространения выглядит следующим образом:...

// На практике мы можем использовать оператор распространения для копирования массива следующим образом:

// let thisArray = [true, true, undefined, false, null];
// let thatArray = [...thisArray];
// thatArrayравно [true, true, undefined, false, null]. thisArrayостается неизменным и thatArrayсодержит те же элементы, что и thisArray.



//task
// Мы определили функцию, copyMachineкоторая принимает arr(массив) и num(число) в качестве аргументов. Предполагается,
//  что функция возвращает новый массив, состоящий из numкопий файлов arr. Мы сделали большую часть работы за вас,
//   но она пока не работает должным образом. Измените функцию, используя синтаксис расширения, чтобы она работала
//    правильно (подсказка: здесь может пригодиться другой метод, который мы уже рассмотрели!).
function copyMachine(arr, num) {
    let newArr = [];
    while (num >= 1) {
      // Only change code below this line
      newArr.push([...arr])
      // Only change code above this line
      num--;
    }
    return newArr;
  }
  
  console.log(copyMachine([true, false, true], 2));



                //   Объединение массивов с помощью оператора Spread
// Еще одним огромным преимуществом оператора расширения является возможность комбинировать массивы или вставлять все элементы одного массива
//  в другой по любому индексу. С более традиционным синтаксисом мы можем объединять массивы, но это позволяет нам объединять массивы только 
//  в конце одного и в начале другого. Синтаксис расширения делает следующую операцию чрезвычайно простой:

// let thisArray = ['sage', 'rosemary', 'parsley', 'thyme'];

// let thatArray = ['basil', 'cilantro', ...thisArray, 'coriander'];
// thatArrayбудет иметь значение ['basil', 'cilantro', 'sage', 'rosemary', 'parsley', 'thyme', 'coriander'].

// Используя синтаксис расширения, мы только что выполнили операцию, которая была бы более сложной и многословной,
//  если бы мы использовали традиционные методы.


//task
// Мы определили функцию spreadOut, которая возвращает переменную sentence. Измените функцию с помощью оператора распространения так,
//  чтобы она возвращала массив ['learning', 'to', 'code', 'is', 'fun'].

function spreadOut() {
    let fragment = ['to', 'code'];
    let sentence = ['learning', ...fragment, 'is', 'fun']; // Change this line
    return sentence;
  }
  
  console.log(spreadOut());